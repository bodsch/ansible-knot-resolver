-- log_level('debug')
-- log_target('syslog')

user(
  '{{ knot_resolver_owner }}',
  '{{ knot_resolver_group }}'
)

{% if knot_resolver_support_ipv6 %}
net.ipv6 = true
{% else %}
net.ipv6 = false
{% endif %}

{% if knot_resolver_listener is defined and
      knot_resolver_listener | count > 0 %}
{% for listener in knot_resolver_listener %}
net.listen({{ listener | resolver_listener }})
{% endfor %}
{% endif %}

{%- if knot_resolver_support_ipv6 %}
net.listen('::1', 53, { kind = 'dns', freebind = true })
net.listen('::1', 853, { kind = 'tls', freebind = true })
{% endif %}

{%- if knot_resolver_service_ip4 is defined and
    knot_resolver_service_ip4 | length > 0 %}
net.listen('{{ knot_resolver_service_ip4 }}', 53, { kind = 'dns' })
net.listen('{{ knot_resolver_service_ip4 }}', 853, { kind = 'tls' })
{% endif %}

modules = {
  'hints > iterate',  -- Load /etc/hosts and allow custom root hints
  'stats',            -- Track internal statistics
  'predict',          -- Prefetch expiring/frequent records
}
-- modules.list()

cache.size = {{ knot_resolver_cachesize }} * MB

{% if knot_resolver_views is defined and
    knot_resolver_views | length > 0 %}
modules.load('view')
{% for view in knot_resolver_views %}
{%- if view.pass  is defined and view.pass | count > 0%}
{% for k,v in view.items() %}
{% for ip in v %}
view:addr('{{ ip }}', policy.all(policy.PASS))
{% endfor %}
{% endfor %}
{% endif %}
{% if view.drop  is defined and view.drop | count > 0%}
{% for k,v in view.items() %}
{% for ip in v %}
view:addr('{{ ip }}', policy.all(policy.DROP))
{% endfor %}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

policy.add(
    policy.suffix(
        policy.REQTRACE, policy.todnames({'.'})
    )
)

{% if knot_resolver_internal_domain is defined and
    knot_resolver_internal_domain | length > 0 %}
-- define list of internal-only domains
-- forward only queries for names under domain example.com to a single IP address
{% for domain in knot_resolver_internal_domain %}
policy.add(
    policy.suffix(
{% if domain.policy.forward is defined %}
        policy.FORWARD('{{ domain.policy.forward | default('127.0.1.1@53') }}'),
{% elif domain.policy.stub is defined %}
        policy.STUB('{{ domain.policy.stub | default('127.0.1.1@53') }}'),
{% endif %}
        policy.todnames({ '{{ domain.domains | join("', '") }}' })
    )
)
{% endfor %}
{% endif %}
